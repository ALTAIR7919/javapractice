# 자바의 정석 3일차
## 2장
실수형의 범위와 정밀도 
4byte의 정수로는 약 ±2*10^9 까지 표현 가능 하지만 float는 최대 3.4*10^38 자리의 숫자 까지 가능하다
이게 가능한 이유는 저장하는 방식의 차이 때문인데 
int는 부호와 값으로 2부분이 있지만 float는 부호(S), 지수(E), 가수(M)의 형태로 저장하기 때문이다
이를 부동소수점수라고 한다 
공식은 ±M*2^E 
너무 큰 숫자까지 저장할려고 해서 실수형은 한가지 단점이 있는데 
오차가 발생할 수 있다는 것이다
그래서 정밀도가 정말 중요한데 float타입은 7자리까지의 정밀도를(7자리의 10진수를 오차없이 저장할수 있다)
double타입은 그의 약 2배인 15자리를 저장할 수 있다
//그래서 코드를 짤 때 실수는 double을 쓰는 거였다 그냥 float로 짜게 되면 범위가 작아서 그런건줄 알았는데;; 이런 이유가... 사기당한 기분

형변환(캐스팅)
그저 형변환하고자 하는 변수나 리터널에 변환하고자 하는 타입의 괄호만 넣어주면 됨
'(타입)피연산자' 이렇게
이게 정확하게 뭐냐면 그냥 값을 읽어서 저장된 타입으로 형변환하고 그 결과를 반환한다
그래서 피연산자의 변수 값은 형변환 후에도 아무런 변화가 없다
자동형변환 그냥 컴퓨터가 앞에 쓰지 않아도 알아서 기본적으로 형변환을 해준다 
만약 'float f = 1111;'이라면 'float f = (float)1111;'이 생략 되어 있는 것이다   
그리고 함수의 범위에 오버되는 숫자를 쓴다면 오류가 나지만 우리가 앞에 다른 것을 써준다면 프로그래머가 의도를 했구나 하고 오류르 발생하지 않는다
또한 서로 다른 두 타입간에 덧셈에서는 둘 중 표현범위가 더 넓은 타입으로 연산을 진행한다 이유는 단순히 값손실이 적기 때문
그래서 규칙이 있다 
1. boolean을 제외한 나머지 기본형은 서로 형변환이 가능하다
2. 기본형과 참조형은 서로 형변환 할 수 없다
3. 서로 다른 타입의 변수간의 연산은 형변환으로 하는 것이 원칙이지만, 값의 범위가 작은 타입에서 큰 타입으로의 형변환은 생략할 수 있다
// 이거 유용할 것 같음. 작은 데에서 큰 데로 가는건 조심해야 겠지만
