# 자바의 정석 2일차
## 2장
진법 
우리는 보통 10진법을 쓰지만 컴퓨터는 2진법을 사용함
bit & byte & word
한 자리의 2진수를 bit라고 함 이게 컴퓨터가 값을 저장할수 있는 최소의 단위
하지만 bit가 너무 작은 단위이기 때문에 8개를 묶어서 byte라는 단위를 만들게 됨
그리고 마지막으로 CPU가 한번에 처리할 수 있는 데이터의 크기를 word라고 함
컴퓨터의 CPU에 따라 32비트(4byte)가 64비트가 될수도 있다(8byte) 
통상 내컴퓨터 로컬 c 폴더에 Program Files (x86) 가 써져 있다면 32비트 Program Files (x64)가 써져 있다면 4비트이다 
2진수 만드는 법
일단 모든 숫자는 2진수로 표현 가능하다라는 전제가 필요하다
그러면 X*2^0+X*2^1+X*2^2+X*2^3+X*2^4···으로 각 자리의 X에 0또는 1을 넣는 것으로 무한한 숫자가 표현이 가능하다
그렇기 떄문에 2진법에서 8진수나 16진수로 변환 할 떄 
8진수는 3칸씩 끊어세어 변환이 가능하고
16진수는 4칸씩 끊어세어 편하게 변환 할 수 있다
2의 보수법 
비트에 음수의 값을 넣고 싶어서 생겼다
4비트를 기준으로 하면 0 1 2 3 4 5 6 7 -8 -7 -6 -5 -4 -3 -2 -1로 음수 배치를 한다
이 이유는 절대 값이 같은 양수와 음수를 더 했을 때 2진수로 0의 값을 얻어 부호를 신경 쓰지 않아도 된다는 이유와 2진수가 증가 할때 10진 음수가 감소한다는 모순이 없어지기 때문이다
ex)4비트의 0101(10 진수로 5) + 1011(10 진수로 -5) = 10000 이지만 4비트는 ㅁㅁㅁㅁ만 저장하기 때문에 맨 앞의 1은 버려진다
이처럼 5와 -5처럼 부호가 다르고 절대값이 같은 수를 2의 보수 관계라고 함
2의 보수를 쉽게 구하는 법은 쉽게 2의 보수 = 1의 보수 + 1 라고 생각하면 된다\
왜 그러냐면 어떤 2진수가 있을 때 2진수의 1의 보수를 더하면 모든 자리가 1이 된다
거기서 양변에 1을 더하면 좌변은 1을 더한 값이 되지만 우벼은 0이 된다 
오버플로우 
타입이 표현할 수 있는 값의 범위를 넘어서는 것을 말함
이는 발생했다고 해서 오류가 생기지 않지만 예상 했던 결과를 못 얻을 수 있다 
그러니까 처음 타입 선택을 할 때 잘 선택해서 하자
어떤 값이 뜨냐면 최대값에서 +1을 하면 최솟값이 최솟값에서 -1을 하면 최댓값이 그러니까 뫼비우스의 띄 마냥 계속 순환한다
그냥 최댓값과 최솟값을 이어뒀다고 생각하면 편하다

